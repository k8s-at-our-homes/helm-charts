{{- if .Values.photon.enabled }}
{{- $internalHost := dict "host" (printf "%s-photon" (include "common.fullname" .)) "scheme" "http" "port" 2322 "internal" true }}
{{- $allClusters := list }}
{{- $regularHosts := list }}
{{- if .Values.photon.deploy }}
{{- $allClusters = append $allClusters $internalHost }}
{{- end }}
{{- range $host := .Values.photon.gateway.hosts }}
{{- $processedHost := dict "host" $host.host }}
{{- if $host.rateLimit }}
{{- $processedHost = set $processedHost "rateLimit" $host.rateLimit }}
{{- end }}
{{- $processedHost = set $processedHost "scheme" "https" }}
{{- $processedHost = set $processedHost "port" 443 }}
{{- $regularHosts = append $regularHosts $processedHost }}
{{- $allClusters = append $allClusters $processedHost }}
{{- end }}


apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "common.fullname" . }}-photon-gateway-config
  labels:
    app.kubernetes.io/component: "photon-gateway"
    {{- include "common.labels" . | nindent 4 }}
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - name: listener_http
        address:
          socket_address:
            protocol: TCP
            address: 0.0.0.0
            port_value: 8080
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              access_log:
              - name: envoy.access_loggers.stdout
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
              http_filters:
              - name: envoy.filters.http.lua
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                  inline_code: | {{ .Files.Get "lua/photon-response-validator.lua" | nindent 20 }}
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  # Health check endpoint - direct response
                  - match:
                      path: "/healthz"
                    direct_response:
                      status: 200
                      body:
                        inline_string: "OK"
                  # Route B: Retry requests - all hosts (preferred + non-preferred)
                  # This route is checked first when the retry header is present
                  # Specifying Route B before Route A makes sure that Route B can be reached. Otherwise Route A would always match before B.
                  - match:
                      prefix: "/"
                      headers:
                      - name: "x-photon-retry"
                        present_match: true
                    route:
                      weighted_clusters:
                        clusters:
                        {{- range $host := $regularHosts }}
                        - name: photon_host_{{ $host.host }}
                          weight: {{ max 1 (min 100 ($host.rateLimit | default 100)) }}
                        {{- end }}
                      timeout: 30s
                      retry_policy:
                        retry_on: 5xx,gateway-error,connect-failure,refused-stream,retriable-status-codes
                        retriable_status_codes: [429]
                        num_retries: {{ len $regularHosts }}
                        per_try_timeout: 10s
                        retry_back_off:
                          base_interval: 0.1s
                          max_interval: 1s
                        retry_host_predicate:
                        - name: envoy.retry_host_predicates.previous_hosts
                        host_selection_retry_max_attempts: {{ len $regularHosts }}
                  # Route A: Initial requests - only internal host if deployed, else regular hosts
                  - match:
                      prefix: "/"
                    route:
                      {{- if .Values.photon.deploy }}
                      weighted_clusters:
                        clusters:
                        - name: photon_host_{{ $internalHost.host }}
                          weight: 100
                      {{- else }}
                      weighted_clusters:
                        clusters:
                        {{- range $host := $regularHosts }}
                        - name: photon_host_{{ $host.host }}
                          weight: {{ max 1 (min 100 ($host.rateLimit | default 100)) }}
                        {{- end }}
                      {{- end }}
                      timeout: 30s
                      retry_policy:
                        retry_on: 5xx,gateway-error,connect-failure,refused-stream,retriable-headers,retriable-status-codes
                        retriable_status_codes: [429]
                        retriable_headers:
                        - name: "x-photon-retry"
                        {{- if .Values.photon.deploy }}
                        {{- else }}
                        num_retries: {{ len $regularHosts }}
                        host_selection_retry_max_attempts: {{ len $regularHosts }}
                        {{- end }}
                        per_try_timeout: 10s
                        retry_back_off:
                          base_interval: 0.1s
                          max_interval: 1s
                        retry_host_predicate:
                        - name: envoy.retry_host_predicates.previous_hosts
      clusters:
      {{- range $host := $allClusters }}
      - name: photon_host_{{ $host.host }}
        connect_timeout: 2s
        per_connection_buffer_limit_bytes: 32768
        type: STRICT_DNS
        dns_lookup_family: V4_PREFERRED
        lb_policy: ROUND_ROBIN
        max_requests_per_connection: 100
        upstream_connection_options:
          tcp_keepalive:
            keepalive_probes: 3
            keepalive_time: 30
            keepalive_interval: 5
        circuit_breakers:
          thresholds:
          - priority: DEFAULT
            max_connections: {{ if $host.internal }}50{{ else }}20{{ end }}
            max_pending_requests: {{ if $host.internal }}50{{ else }}20{{ end }}
            max_requests: {{ if $host.internal }}100{{ else }}50{{ end }}
            max_retries: 3
        outlier_detection:
          consecutive_5xx: 3
          consecutive_gateway_failure: 3
          interval: 30s
          base_ejection_time: 30s
          max_ejection_percent: 50
          split_external_local_origin_errors: true
        {{- if not $host.internal }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            auto_host_sni: true
            common_tls_context:
              validation_context:
                match_typed_subject_alt_names:
                - san_type: DNS
                  matcher:
                    exact: {{ $host.host }}
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt
        {{- end }}
        load_assignment:
          cluster_name: photon_host_{{ $host.host }}
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ $host.host }}
                    port_value: {{ $host.port }}
        health_checks:
        {{- if $host.internal }}
        - timeout: 1s
          interval: 10s
          unhealthy_threshold: 3
          healthy_threshold: 1
          http_health_check:
            path: /api?q=thisisahealthcheck
            expected_statuses:
            - start: 200
              end: 299
        {{- else }}
        - timeout: 5s
          interval: 60s
          unhealthy_threshold: 3
          healthy_threshold: 2
          no_traffic_interval: 86400s
          no_traffic_healthy_interval: 604800s
          http_health_check:
            path: /api?q=thisisahealthcheck
            expected_statuses:
            - start: 200
              end: 299
        {{- end }}
      {{- end }}
{{- end }}