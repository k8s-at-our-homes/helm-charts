kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "common.fullname" . }}-server
  labels:
    app.kubernetes.io/component: "server"
    {{- include "common.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.server.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: "server"
      {{- include "common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "server"
        {{- include "common.selectorLabels" . | nindent 8 }}
    spec:
      securityContext: {{ toYaml .Values.server.podSecurityContext | nindent 8 }}
      containers:
        - name: server
          image: "{{ .Values.server.image.registry }}/{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          env:
            - name: IMMICH_PORT
              value: '2283'
            - name: TZ
              value: {{ .Values.timezone }}
            - name: IMMICH_TELEMETRY_INCLUDE
              value: all
            - name: DB_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.clusterName }}-app
                  key: host
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.clusterName }}-app
                  key: username
            - name: DB_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.clusterName }}-app
                  key: dbname
            - name: REDIS_HOSTNAME
              value: {{ .Release.Name }}-redis-master
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://{{ template "common.fullname" . }}-machine-learning:3003
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.clusterName }}-app
                  key: password
          startupProbe:
            periodSeconds: 10
            failureThreshold: 60
            httpGet:
              port: http
              path: /api/server/ping
          livenessProbe:
            httpGet:
              port: http
              path: /api/server/ping
          readinessProbe:
            httpGet:
              port: http
              path: /api/server/ping
          volumeMounts:
            - name: library
              mountPath: /usr/src/app/upload
          ports:
            - name: http
              containerPort: 2283
            - name: server-metrics
              containerPort: 8081
            - name: jobs-metrics
              containerPort: 8082
          resources: {{ toYaml .Values.server.resources | nindent 12 }}
      volumes:
        - name: library
          persistentVolumeClaim:
              claimName: {{ template "common.fullname" . }}-library
