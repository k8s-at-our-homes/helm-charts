kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "common.fullname" . }}
  labels:
    app.kubernetes.io/component: "app"
    {{- include "component.labels" (dict "componentName" "dawarich" "imageTag" .Values.app.image.tag "ctx" .) | nindent 4 }}
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: "app"
      {{- include "component.selectorLabels" (dict "componentName" "dawarich" "ctx" .) | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "app"
        {{- include "component.selectorLabels" (dict "componentName" "dawarich" "ctx" .) | nindent 8 }}
    spec:
      securityContext: {{ toYaml .Values.app.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        image: '{{ .Values.app.image.registry }}/{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}'
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}
        command: ['web-entrypoint.sh']
        args: ['bin/rails', 'server', '-p', '3000', '-b', '::']
        env:
          {{- include "dawarich.env" . | nindent 8 }}
        startupProbe:
          httpGet:
            port: http
            path: /api/v1/health
            httpHeaders:
            - name: Host
              value: {{ template "common.fullname" . }}
        livenessProbe:
          httpGet:
            port: http
            path: /api/v1/health
            httpHeaders:
            - name: Host
              value: {{ template "common.fullname" . }}
        readinessProbe:
          httpGet:
            port: http
            path: /api/v1/health
            httpHeaders:
            - name: Host
              value: {{ template "common.fullname" . }}
        volumeMounts:
        - name: data
          mountPath: /var/app/storage
        ports:
        - name: http
          containerPort: 3000
        resources: {{ toYaml .Values.app.resources | nindent 12 }}
      - name: {{ .Chart.Name }}-sidekiq
        image: '{{ .Values.app.image.registry }}/{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}'
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}
        command: ['sidekiq-entrypoint.sh']
        args: ['bundle', 'exec', 'sidekiq']
        env:
          {{- include "dawarich.env" . | nindent 8 }}
        startupProbe:
          exec:
            command: [ "sh", "-c", "pgrep -f sidekiq" ]
        livenessProbe:
          exec:
            command: [ "sh", "-c", "pgrep -f sidekiq" ]
        readinessProbe:
          exec:
            command: [ "sh", "-c", "pgrep -f sidekiq" ]
        volumeMounts:
        - name: data
          mountPath: /var/app/storage
      volumes:
      - name: data
        emptyDir: {}
