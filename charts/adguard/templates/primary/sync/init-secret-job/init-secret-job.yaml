apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "common.fullname" . }}-init-secret-job
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
  labels:
    app.kubernetes.io/name: {{ template "common.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: "adguard-init-secret-job"
    {{- include "common.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "common.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "adguard-init-secret-job"
        {{- include "common.labels" . | nindent 4 }}
    spec:
      containers:
        - name: secret-init
          image: "{{ .Values.secretInit.image.registry }}/{{ .Values.secretInit.image.repository }}:{{ .Values.secretInit.image.tag }}"
          imagePullPolicy: IfNotPresent
          resources: {{ toYaml .Values.secretInit.resources | nindent 12 }}
          command:
            - sh
            - "-c"
            - kubectl get secret {{ template "common.fullname" . }}-secondary-password >/dev/null 2>&1 || kubectl create secret -n default generic {{ template "common.fullname" . }}-secondary-password --password=$(openssl rand -base64 32)
      restartPolicy: OnFailure
      serviceAccountName: {{ template "common.fullname" . }}-init-secret-job
